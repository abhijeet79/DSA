    vector<int> parent;
    vector<int> size;
    void dsu(int n){
        parent.resize(n+1);
        size.resize(n+1,1);
        for(int i = 0; i<n+1; i++){
            parent[i] = i;
        }
    }
    int find(int node ,vector<int> &parent){
        if(node ==parent[node]) return node ;
        return parent[node]=find(parent[node],parent);
    }
    void Union(vector<int> &parent,vector<int> &size,int a,int b){
        a=find(a,parent);
        b=find(b,parent);
        if(a==b) return ;
        if(size[a]<size[b]) swap(a,b);
        parent[b]=a;
        size[a]+=size[b];
        return;
    }
